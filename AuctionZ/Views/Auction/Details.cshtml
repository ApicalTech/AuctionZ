@model AuctionZ.Models.LotViewModel
@{

    ViewBag.Title = "Auction detail";
    string NoResults = ViewBag.NoBids;
    int? currentUserId = User.GetUserId();
}

<div class="col-md-12" style="margin-top:20px;">
    <h2 style="text-align:center">@Model.Name</h2>
    <div class="row">
        <div class="col-md-4">
            <img src="~/images/@Model.ImageUrl" style="max-width:100%;" alt="@Model.Name" height="150">
        </div>
        <div class="caption col-md-2">
            <p>
                Expiration time:
                @if (DateTime.Now > Model.ExpirationTime)
                {
                    <span class="label label-danger">@Model.ExpirationTime, Time is over</span>
                }
                else
                {
                    <span class="label label-success">@Model.ExpirationTime</span>
                }
            </p>
            <p>Current price: <span id="currentPrice" class="">@Model.Price.ToString("C")</span></p>
            @if (currentUserId != Model.UserId && Model.ExpirationTime > DateTime.Now)
            {
                <form id="makeBidForm" method="post">
                    <br/>
                    <div asp-validation-summary="All"></div>
                    <input name="lotId" id="lotId" value="@Model.LotId" hidden/>
                    <label class="control-label">Make your bid here:</label>
                    <input type="text" id="bidValue" name="bidValue" min="@Model.Price+1" required class="form-control"/>
                    <br/>
                    <button type="submit" class="btn btn-success">Make your bid</button>
                </form>
            }
            else
            {
                string restrict = "You dont have no opportunity to make a bid";
                <p style="color:orange">@restrict</p>
            }
        </div>
        <script>
            //            const connection = new signalR.HubConnectionBuilder()
//                .withUrl("/auction")
//                .configureLogging(signalR.LogLevel.Information)
//                .build();
//
//

        


//            $("#makeBidForm").submit(function (e) {
//                e.preventDefault();
//                const lotId = this.elements["lotId"].value;
//                const bidValue = this.elements["bidValue"].value;
//                connection.Invoke("MakeBid", lotId, bidValue);
//            });
//
//            connection.on('Error', function (responce) {
//
//                let $summary = $(".validation-summary-valid").find('ul');
//                $summary.empty();
//                $.each(JSON.parse(responce),
//                    function (i, el) {
//                        $.each(el.toString().split(","),
//                            function (i, el) {
//                                $summary.append($("<li>").text(el));
//                            });
//                    });
//            });
//
//            connection.on('BidMade', function (row, newPrice) {
//
//                $("#bidsTable tbody").prepend(row);
//                $("#currentPrice").innerHTML = newPrice;
//            });
//            connection.start();
        </script>
        </div>
    <br/>
    @if (currentUserId != null && (currentUserId == @Model.UserId))
    {
        <br/>
        <div class="col-md-4">
            <a class="btn btn-primary" asp-controller="Auction" asp-action="EditLot" asp-route-lotId="@Model.LotId">EditLot</a>
            <form class="form-inline" style="float: left; margin-right: 2% " method="post" asp-controller="Auction" asp-action="DeleteLot"
                  asp-route-lotId="@Model.LotId"
                  asp-antiforgery="true">
                <button type="submit" onclick="if (!confirm('Are you sure want to delete lot?')) return false;"
                        class="btn btn-danger">Delete</button>
            </form>
        </div>
        <br/>
    }
</div>
<div class="col-md-12" style="margin-top:10px;">
    <div class="panel panel-default">
        <div class="panel-heading">Bids</div>
        <table class="table" id="bidsTable">
            <thead>
            <tr>
                <th>Buyer</th>
                <th>Bid value</th>
                <th>Date of bid</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var bid in Model.Bids)
            {
                <tr>
                    <td>@bid.User.UserName</td>
                    <td>@bid.Price</td>
                    <td>@bid.DateOfBid.ToString("f")</td>
                </tr>
            }
            </tbody>
        </table>
    </div>
    @if (string.IsNullOrEmpty(NoResults))
    {
        <div class="row">
            <div class="col-md-4 col-md-offset-4">
            </div>
        </div>
    }
    else
    {
        <h3>@ViewBag.NoBids</h3>
    }
</div>

<div id="resultModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Lot results</h4>
            </div>
                <div class="modal-body">
                    <label style="font-size: medium" id="LotResultText"></label> 
                </div>
                <div class="modal-footer">
                    <button id="closeButton" type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
        </div>
    </div>
</div>

<script>

 var x = function MakeBid(lotId, bidValue) {
        $.ajax({
            url: "/Auction/MakeBid/"+lotId,
            contentType: "application/json",
            method: "POST",
            dataType: "json",
            data: JSON.stringify(
                {
                    LotId: lotId,
                    Price: bidValue
                }),
            success: function (bid) {
                return;
                $("#bidsTable tbody").prepend(bid['row']); 
            },
            error: function (xhr, ajaxOptions, thrownError) {
                if (xhr.status === 400) {
                    let $summary = $(".validation-summary-valid").find('ul');
                    $summary.empty();
                    $.each(JSON.parse(xhr.responseText),
                        function (i, el) {
                            $.each(el.toString().split(","),
                                function (i, el) {
                                    $summary.append($("<li>").text(el));
                                });
                        });
                }
            }
        });
    }

    $("#makeBidForm").submit(function (e) {
        e.preventDefault();
        const lotId = this.elements["lotId"].value;
        const bidValue = this.elements["bidValue"].value;
        x(lotId, bidValue);
        //AuctionConnection.invoke("MakeBid", @currentUserId, lotId, bidValue);
    });

    AuctionConnection.on('Error', function (responce) {
        console.log(responce);
        let $summary = $(".validation-summary-valid").find('ul');
        $summary.empty();
        $.each(JSON.parse(responce),
            function (i, el) {
                $.each(el.toString().split(","),
                    function (i, el) {
                        $summary.append($("<li>").text(el));
                    });
            });
    });


    AuctionConnection.on("BidMade",
        function (lotId, row, newPrice) {
            var id = $("#lotId").val();
            if (lotId != id) return;
            $("#bidsTable tbody").prepend(row);
            //Todo fix table + innerHtml
            document.getElementById("currentPrice").innerHTML = newPrice;
    });

    AuctionConnection.on("LotEnd",
        function (lotId, message) {
            if (lotId != $("#lotId").val()) return;
            alert(message);
            document.getElementById("LotResultText").innerText = message;
            document.getElementById("closeButton").onclick = location.reload;
            $('#resultModal').modal('show');
        });

</script>